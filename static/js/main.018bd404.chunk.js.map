{"version":3,"sources":["context/StarWarsContext.js","components/Table/index.js","components/FilterForm/index.js","services/api.js","context/Provider.js","App.js","index.js","images/Star_Wars_silhouette_Olly_Moss_artwork.jpg","images/star-wars-logo.svg"],"names":["StarWarsContext","createContext","Table","useContext","isLoading","filters","filterByNumericValue","filmData","charData","filterByName","filter","planet","name","toLowerCase","includes","map","index","key","data-testid","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","film","length","title","residents","char","replace","FilterForm","planetData","setFilters","setFilterByNumericValue","usedColumnFilters","filterByNumericValues","item","column","newColumnFilter","filterIteration","comparison","parseInt","value","useEffect","htmlFor","id","onChange","target","type","onClick","numericValues","document","getElementById","concat","handleCLick","disabled","deleteFilter","planetUrls","fetchData","a","promises","url","fetch","requestData","json","data","results","Promise","all","StarWarsData","finalResult","flat","filmsData","charactersUrls","fetchCharactersData","requestCharactersData","charactersData","splice","Provider","children","useState","setIsLoading","setPlanetData","setFilmData","setCharData","order","sort","getPlanetData","getFilmData","getCharData","contextValue","App","className","src","starwars","alt","logo","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.018bd404.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst StarWarsContext = createContext();\n\nexport default StarWarsContext;\n","import React, { useContext } from 'react';\nimport StarWarsContext from '../../context/StarWarsContext';\n\nfunction Table() {\n  const {\n    isLoading, filters, filterByNumericValue, filmData, charData,\n  } = useContext(StarWarsContext);\n\n  const filterByName = filterByNumericValue\n    .filter((planet) => planet.name.toLowerCase()\n      .includes(filters.filterByName.name.toLowerCase()));\n\n  return (\n    isLoading ? 'loading...'\n      : (\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Rotation Period</th>\n              <th>Orbital Period</th>\n              <th>Diameter</th>\n              <th>Climate</th>\n              <th>Gravity</th>\n              <th>Terrain</th>\n              <th>Surface Water</th>\n              <th>Population</th>\n              <th>Films</th>\n              <th>Residents</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filterByName.map((planet, index) => (\n              <tr key={ index }>\n                <td data-testid=\"planet-name\">{planet.name}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n                <td>\n                  {(planet.films).map(\n                    (film) => ` - ${filmData[(film[film.length - 2]) - 1].title}`,\n                  )}\n                </td>\n                <td>\n                  {(planet.residents).map(\n                    (char) => ` - ${charData[(char.replace('https://swapi-trybe.herokuapp.com/api/people/', '').replace('/', '')) - 1].name}`,\n                  )}\n                </td>\n              </tr>))}\n          </tbody>\n        </table>\n      )\n  );\n}\n\nexport default Table;\n","import React, { useContext, useEffect } from 'react';\nimport StarWarsContext from '../../context/StarWarsContext';\n\nfunction FilterForm() {\n  const {\n    planetData, filters, setFilters, setFilterByNumericValue,\n  } = useContext(StarWarsContext);\n\n  const columnFilter = [\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ];\n\n  const usedColumnFilters = filters.filterByNumericValues.map((item) => item.column);\n  const newColumnFilter = columnFilter.filter((column) => !usedColumnFilters\n    .includes(column));\n  // https://stackoverflow.com/questions/34901593/how-to-filter-an-array-from-all-elements-of-another-array\n\n  const comparisonFilter = ['maior que', 'menor que', 'igual a'];\n\n  function handleCLick() {\n    const numericValues = filters.filterByNumericValues;\n    const column = document.getElementById('column').value;\n    const comparison = document.getElementById('comparison').value;\n    const { value } = document.getElementById('value');\n    const filterByNumericValues = numericValues.concat({ column, comparison, value });\n    setFilters({ ...filters, filterByNumericValues });\n  }\n\n  let filterIteration = planetData;\n  if (filters.filterByNumericValues.length > 0) {\n    filters.filterByNumericValues.map((filter) => {\n      if (filter.comparison === 'maior que') {\n        filterIteration = filterIteration.filter(\n          (planet) => parseInt(planet[filter.column], 10) > parseInt(filter.value, 10),\n        );\n      } if (filter.comparison === 'menor que') {\n        filterIteration = filterIteration.filter(\n          (planet) => parseInt(planet[filter.column], 10) < parseInt(filter.value, 10),\n        );\n      } if (filter.comparison === 'igual a') {\n        filterIteration = filterIteration.filter(\n          (planet) => parseInt(planet[filter.column], 10) === parseInt(filter.value, 10),\n        );\n      }\n      return filterIteration;\n    });\n  }\n\n  function deleteFilter(filter) {\n    const filterByNumericValues = filters.filterByNumericValues\n      .filter((item) => item.column !== filter.column);\n    setFilters({ ...filters, filterByNumericValues });\n  }\n\n  useEffect(() => {\n    setFilterByNumericValue(filterIteration);\n  }, [filterIteration, filters.filterByNumericValues, setFilterByNumericValue]);\n\n  function checkValidity() {\n    if (newColumnFilter.length === 0) return true;\n    return false;\n  }\n\n  /* function columnSort() {\n\n  } */\n\n  return (\n    <header>\n      <form>\n        <label htmlFor=\"name-filter\">\n          Planet name:\n          <input\n            name=\"name-filter\"\n            id=\"name-filter\"\n            data-testid=\"name-filter\"\n            onChange={ ({ target: { value } }) => setFilters(\n              { ...filters, filterByName: { name: value } },\n            ) }\n          />\n        </label>\n        <label htmlFor=\"column\">\n          Column:\n          <select\n            name=\"column\"\n            id=\"column\"\n            data-testid=\"column-filter\"\n          >\n            {newColumnFilter.map((column) => <option key={ column }>{ column }</option>)}\n          </select>\n        </label>\n        <label htmlFor=\"comparison\">\n          Comparison:\n          <select\n            name=\"comparison\"\n            id=\"comparison\"\n            data-testid=\"comparison-filter\"\n          >\n            { comparisonFilter.map((item) => <option key={ item }>{ item }</option>) }\n          </select>\n        </label>\n        <label htmlFor=\"value\">\n          Value:\n          <input\n            type=\"number\"\n            name=\"value\"\n            id=\"value\"\n            data-testid=\"value-filter\"\n          />\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ () => handleCLick() }\n          disabled={ checkValidity() }\n        >\n          Filter\n        </button>\n        <label htmlFor=\"column-sort\">\n          Oyder by:\n          <select name=\"column-sort\" id=\"column-sort\" data-testid=\"column-sort\">\n            <option>Name</option>\n            <option>Rotation Period</option>\n            <option>Orbital Period</option>\n            <option>Diameter</option>\n            <option>Surface Water</option>\n            <option>Population</option>\n          </select>\n          <label htmlFor=\"ASC\">\n            ASC\n            <input\n              type=\"radio\"\n              id=\"ASC\"\n              name=\"column-sort\"\n              value=\"ASC\"\n              data-testid=\"column-sort-input-asc\"\n            />\n          </label>\n          <label htmlFor=\"DESC\">\n            DESC\n            <input\n              type=\"radio\"\n              id=\"DESC\"\n              name=\"column-sort\"\n              value=\"DESC\"\n              data-testid=\"column-sort-input-desc\"\n            />\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"column-sort-button\"\n          //  onClick={ columnSort() }\n          >\n            Sort\n          </button>\n        </label>\n      </form>\n      { filters.filterByNumericValues.map((item, index) => (\n        <div data-testid=\"filter\" id={ index } key={ index }>\n          <span>\n            { `${item.column} ${item.comparison} ${item.value}` }\n          </span>\n          <button type=\"button\" onClick={ () => deleteFilter(item) }>X</button>\n        </div>)) }\n    </header>\n  );\n}\n\nexport default FilterForm;\n","// https://oieduardorabelo.medium.com/javascript-armadilhas-do-asyn-await-em-loops-1cdad44db7f0\n// https://stackoverflow.com/questions/42489918/async-await-inside-arraymap\nconst planetUrls = [\n  'https://swapi-trybe.herokuapp.com/api/planets/?page=1',\n  'https://swapi-trybe.herokuapp.com/api/planets/?page=2',\n  'https://swapi-trybe.herokuapp.com/api/planets/?page=3',\n  'https://swapi-trybe.herokuapp.com/api/planets/?page=4',\n  'https://swapi-trybe.herokuapp.com/api/planets/?page=5',\n  'https://swapi-trybe.herokuapp.com/api/planets/?page=6',\n];\n\nasync function fetchData() {\n  const promises = planetUrls.map(async (url) => {\n    const requestData = await fetch(url);\n    const data = await requestData.json();\n    return data.results;\n  });\n  return Promise.all(promises);\n}\n\nexport const StarWarsData = async () => {\n  const results = await fetchData();\n  const finalResult = results.flat();\n  return finalResult;\n};\n\nexport const filmsData = async () => {\n  const requestData = await fetch('https://swapi-trybe.herokuapp.com/api/films/');\n  const { results } = await requestData.json();\n  return results;\n};\n\nconst charactersUrls = [\n  'https://swapi-trybe.herokuapp.com/api/people/?page=1',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=2',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=3',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=4',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=5',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=6',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=7',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=8',\n  'https://swapi-trybe.herokuapp.com/api/people/?page=9',\n];\n\nasync function fetchCharactersData() {\n  const promises = charactersUrls.map(async (url) => {\n    const requestCharactersData = await fetch(url);\n    const data = await requestCharactersData.json();\n    return data.results;\n  });\n  return Promise.all(promises);\n}\n\nconst SEVENTEEN = 17;\nexport const charactersData = async () => {\n  const results = await fetchCharactersData();\n  const finalResult = results.flat();\n  // solve the problem with non-existent characters\n  finalResult.splice(SEVENTEEN, 0, '');\n  return finalResult;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport { StarWarsData, filmsData, charactersData } from '../services/api';\n\nfunction Provider({ children }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [planetData, setPlanetData] = useState([]);\n  const [filmData, setFilmData] = useState([]);\n  const [charData, setCharData] = useState([]);\n  const [filters, setFilters] = useState(\n    {\n      filterByName: {\n        name: '',\n      },\n      filterByNumericValues: [],\n      order: {\n        column: 'Name',\n        sort: 'ASC',\n      },\n    },\n  );\n  const [filterByNumericValue, setFilterByNumericValue] = useState([]);\n\n  async function fetchData() {\n    setIsLoading(true);\n    const getPlanetData = await StarWarsData();\n    setPlanetData(getPlanetData);\n    const getFilmData = await filmsData();\n    setFilmData(getFilmData);\n    const getCharData = await charactersData();\n    setCharData(getCharData);\n    setFilterByNumericValue(getPlanetData);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const contextValue = {\n    isLoading,\n    planetData,\n    filmData,\n    charData,\n    filters,\n    setFilters,\n    filterByNumericValue,\n    setFilterByNumericValue,\n  };\n\n  return (\n    <StarWarsContext.Provider value={ contextValue }>\n      { children }\n    </StarWarsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default Provider;\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport FilterForm from './components/FilterForm';\nimport Provider from './context/Provider';\nimport starwars from './images/Star_Wars_silhouette_Olly_Moss_artwork.jpg';\nimport logo from './images/star-wars-logo.svg';\n\nfunction App() {\n  return (\n    <Provider>\n      <main className=\"\">\n        <img src={ starwars } alt=\"Jedi\" className=\"starwars\" />\n        <img src={ logo } alt=\"Logo Star Wars\" className=\"logo\" />\n        <FilterForm />\n        <Table />\n      </main>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/Star_Wars_silhouette_Olly_Moss_artwork.3b06afbb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/star-wars-logo.2db77352.svg\";"],"sourceRoot":""}